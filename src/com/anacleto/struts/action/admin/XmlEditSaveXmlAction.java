/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.anacleto.struts.action.admin;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.anacleto.base.Configuration;
import com.anacleto.struts.form.admin.XmlEditSaveXmlForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-28-2006
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class XmlEditSaveXmlAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XmlEditSaveXmlForm saveXmlForm = (XmlEditSaveXmlForm) form;
		
		// String dirName = "c:\\doku\\tesuji\\fejlesztes\\xml\\";
		String dirName = Configuration.params.getConfigDir();

		String fileName = saveXmlForm.getFileName();
		String path = dirName + "/" + fileName;
    	ActionMessages errors = new ActionMessages();

    	String err;
    	try {
          FileOutputStream outFile = new FileOutputStream(path);
          String content = saveXmlForm.getContent();
          err = writeContent(outFile, "utf-8", content);
   		  if(err != "") {
   			errors.add("writecontent", new ActionMessage(err, ""));
   		  }
		} catch(FileNotFoundException e) {
          errors.add("filenotfound", new ActionMessage("FileNotFoundException", ""));
		}
		if(errors.isEmpty() == false) {
          saveErrors(request,errors);
		} else {
		  request.setAttribute("success", "1");
		}
	    // return mapping.findForward("success");
	    return mapping.getInputForward();
	}
	
	private String writeContent(FileOutputStream outFile, 
			                  String code, 
			                  String content) {
	  String err;

	  try {
        Writer out = new OutputStreamWriter(outFile, code);
        out.write(content);
        out.close();
        err = "";
	  } catch(IOException e) {
	    err = "IOException";
	  }
	  return err;
	}

}